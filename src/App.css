#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

main {
  color: #ddd;
  background-color: rgb(68, 66, 66, 0.5);
}

body {
  background-color: rgba(43, 94, 56, 0.8);
  font-size: 20px;
}

/* Default Navbar Styles */
.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 20px;
  background-color: rgba(36, 169, 40, 0.1);
  height: 90px; 
  border-radius: 8px;
  position: sticky;
  top: 0;
  z-index: 9999;
  transition: height 0.3s ease, padding 0.3s ease;
}

.navbar-logo {
  display: flex;
  align-items: center;
}

.navbar-logo .logo {
  height: 150px; 
  transition: height 0.3s ease;
}

.navbar-title {
  font-family: 'Lobster', cursive;
  font-size: 60px;
  margin: 0;
  color: rgb(232, 240, 231);
  -webkit-text-stroke: 2px rgb(91, 169, 65);
  transition: font-size 0.3s ease;
}

/* When Navbar is Scrolled */
.navbar.scrolled {
  height: 60px; 
  padding: 5px 10px;
}

.navbar.scrolled .logo {
  height: 80px; 
}

.navbar.scrolled .navbar-title {
  font-size: 40px; 
}

.navbar.scrolled .navbar-links {
  gap: 10px;  
}

/* Navbar Links Styling */
.navbar-links {
  display: flex;
  gap: 15px;
}

.navbar-links .navbar-link {
  text-decoration: none;
  color: black;
  font-weight: bold;
  font-size: 18px; 
}

.navbar-link:hover {
  color: #7ffc0b;
}

/* Make Navbar Responsive on Smaller Screens */

@media (max-width: 768px) {
  .navbar {
    display: flex;
   align-items: center;
   justify-content: space-between;
   padding: 10px;
  }

  .navbar-title {
    font-size: 30px; 
  }

  .navbar-links {
    flex-direction: column;
    gap: 10px;
  }

  .navbar-links .navbar-link {
    font-size: 16px; 
    
  }

  .navbar.scrolled {
    height: 50px; 
    padding: 5px;
  }

  .navbar.scrolled .logo {
    height: 60px; 
  }
}


/* card on homepage */

.card-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: space-evenly;
  padding: 10px;
}

.card {
  flex: 1 1 calc(33.333% - 20px); /* Each card takes up 1/3 of the row, minus gap */
  max-width: calc(33.333% - 20px);
  box-sizing: border-box;
  background-color: rgb(100, 97, 97);
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 15px;
  text-align: center;
  cursor: pointer;
  transition: transform 0.2s;
}

.card:hover {
  transform: scale(1.05);
}

.card img {
  width: 100%; /* Make images responsive */
  height: auto;
  border-radius: 8px;
}

/*Details Page*/

.details-btn {
  display: center;
  justify-content: center;
  align-items: center;
  text-align: center;
  cursor: pointer;
  border-radius: 15px;
  color: white;
  padding: 1px 40px;
  font-size: 16px;
  background-color: rgb(1, 102, 1);
  background-color: #033106;
}

.details-btn:hover {
  color: #fffb00;
}
/*Submit Form*/

.form-container {
  text-align: left;
}

.form-container div label {
  color: #500202;
}

.form-container div input {
  background-color: #057973;
  padding: 5px;
  width: 490px;
  font-size: 1.4rem;
}
.form-group label {
  font-size: 16px;
  color: #333;
  margin-bottom: 5px;
  display: block;
}
.form-group input {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 5px;
  color: #333;
  background-color: white;
  box-sizing: border-box;
}

.button {
  color: #333;
}
/* Modal/Pop up Screen */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

/* Modal content */
.modal-content {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  width: 80%;
  max-width: 500px;
  text-align: center;
  position: relative;
}

/* Close button */
.close {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 30px;
  color: #aaa;
  cursor: pointer;
}

.close:hover {
  color: black;
}

/* mobile version */

@media (max-width: 768px) {
  /* Apply these styles only when the viewport width is 768px or less (tablet and smaller screens) */
  .card {
    flex: 1 1 calc(50% - 20px); /* 
      flex-grow: 1   -> Allows the card to grow and take up available space equally with others.
      flex-shrink: 1 -> Allows the card to shrink proportionally if there's not enough space.
      flex-basis: calc(50% - 20px) -> Sets the card's base width to 50% of the container minus 20px 
    */
    max-width: calc(
      50% - 20px
    ); /* Ensures the card's maximum width is also 50% of the container minus 20px. */
  }
}

@media (max-width: 480px) {
  .card {
    flex: 1 1 100%; /* 1 card per row on smaller screens */
    max-width: 100%;
  }
}
